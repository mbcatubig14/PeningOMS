/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.EmployeeDAO;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import model.Employee;
import model.Person;

/**
 *
 * @author Muhammad
 */
public class EmployeeView extends javax.swing.JPanel {

    private EmployeeDAO employeeDao;

    /**
     * Creates new form EmployeeView
     */
    public EmployeeView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderBtnGroup = new javax.swing.ButtonGroup();
        formPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        postCodeField = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        contactNoField = new javax.swing.JFormattedTextField();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        modifyButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        roleSelector = new javax.swing.JComboBox<>();
        errorLabel = new javax.swing.JLabel();
        employeesTablePanel = new javax.swing.JPanel();
        employeesTableScrollPane = new javax.swing.JScrollPane();
        employeesTable = new javax.swing.JTable();

        setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel1.setLabelFor(firstNameField);
        jLabel1.setText("First name:");

        jLabel2.setLabelFor(lastNameField);
        jLabel2.setText("Last name:");

        jLabel3.setLabelFor(addressField);
        jLabel3.setText("Address:");

        jLabel4.setLabelFor(postCodeField);
        jLabel4.setText("Post code:");

        jLabel5.setLabelFor(contactNoField);
        jLabel5.setText("Contact number:");

        try {
            contactNoField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        genderBtnGroup.add(maleRadioButton);
        maleRadioButton.setText("Male");
        maleRadioButton.setActionCommand("Male");

        genderBtnGroup.add(femaleRadioButton);
        femaleRadioButton.setText("Female");
        femaleRadioButton.setActionCommand("Female");

        jLabel6.setText("Gender:");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        modifyButton.setText("Modify");
        modifyButton.setEnabled(false);
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.setEnabled(false);
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Role:");

        roleSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Role...", "Admin", "Producer", "Manager", "Courier" }));

        errorLabel.setForeground(Color.red);

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(addressField))
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(contactNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(postCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(addButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(modifyButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(removeButton))
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(roleSelector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(formPanelLayout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(maleRadioButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(femaleRadioButton)))
                    .addComponent(errorLabel))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(postCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(contactNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(femaleRadioButton)
                    .addComponent(maleRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(roleSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(modifyButton)
                    .addComponent(removeButton))
                .addContainerGap())
        );

        employeesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First name", "Last name", "Address", "Post code", "Contact No.", "Gender", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        populateTableData();
        employeesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        employeesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeesTableMouseClicked(evt);
            }
        });
        employeesTableScrollPane.setViewportView(employeesTable);
        employeesTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (employeesTable.getColumnModel().getColumnCount() > 0) {
            employeesTable.getColumnModel().getColumn(0).setResizable(false);
            employeesTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            employeesTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout employeesTablePanelLayout = new javax.swing.GroupLayout(employeesTablePanel);
        employeesTablePanel.setLayout(employeesTablePanelLayout);
        employeesTablePanelLayout.setHorizontalGroup(
            employeesTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeesTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeesTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                .addContainerGap())
        );
        employeesTablePanelLayout.setVerticalGroup(
            employeesTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeesTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeesTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(formPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(employeesTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(employeesTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(formPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //Initialise Employee data access object
        employeeDao = new EmployeeDAO();

        //Check for gender radio button selection
        String gender = "";
        if (genderBtnGroup.getSelection() != null) {
            gender = genderBtnGroup.getSelection().getActionCommand();
        } else {
            System.out.println("error");
        }

        //Get data from the form fields
        String firstName = firstNameField.getText(),
                lastName = lastNameField.getText(),
                address = addressField.getText(),
                postCode = postCodeField.getText(),
                contactNo = contactNoField.getText(),
                role = roleSelector.getSelectedItem().toString();

        //Remove hyphens and trim for checks
        String newContactNo = contactNo.replaceAll("-", "").trim();

        if (isValid(firstName, lastName, address, newContactNo, gender, postCode, role)) {
            employeeDao.insertPerson(new Employee(firstName, lastName, address, postCode, newContactNo, gender, role));
            updateTable();
            clearFields();
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        //Initialise Employee data access object
        employeeDao = new EmployeeDAO();

        //Check for gender radio button selection
        String gender = "";
        if (genderBtnGroup.getSelection() != null) {
            gender = genderBtnGroup.getSelection().getActionCommand();
        } else {
            System.out.println("error");
        }

        //Get data from the form fields
        String firstName = firstNameField.getText(),
                lastName = lastNameField.getText(),
                address = addressField.getText(),
                postCode = postCodeField.getText(),
                contactNo = contactNoField.getText(),
                role = roleSelector.getSelectedItem().toString();

        //Remove hyphens and trim for checks
        String newContactNo = contactNo.replaceAll("-", "").trim();

        //get id of the selected row
        int selectedRow = employeesTable.getSelectedRow();
        int employeeId = Integer.parseInt(employeesTable.getValueAt(selectedRow, 0).toString());

        //Check if valid
        if (isValid(firstName, lastName, address, newContactNo, gender, postCode, role)) {
            employeeDao.updatePersonById(employeeId, new Employee(firstName, lastName, address, postCode, newContactNo, gender, role));
            updateTable();
            clearFields();
        }
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        //get id of the selected row
        int selectedRow = employeesTable.getSelectedRow();
        int employeeId = Integer.parseInt(employeesTable.getValueAt(selectedRow, 0).toString());

        employeeDao.deletePersonById(employeeId);
        updateTable();
        clearFields();
    }//GEN-LAST:event_removeButtonActionPerformed

    private void employeesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeesTableMouseClicked
        int selectedRow = employeesTable.getSelectedRow();

        DefaultTableModel employeesTableModel = (DefaultTableModel) employeesTable.getModel();

        if (selectedRow >= 0) {
//Select Role..., Admin, Producer, Manager, Courier
            firstNameField.setText(employeesTableModel.getValueAt(selectedRow, 1).toString());
            lastNameField.setText(employeesTableModel.getValueAt(selectedRow, 2).toString());
            addressField.setText(employeesTableModel.getValueAt(selectedRow, 3).toString());
            postCodeField.setText(employeesTableModel.getValueAt(selectedRow, 4).toString());
            contactNoField.setText(employeesTableModel.getValueAt(selectedRow, 5).toString());

            if (employeesTableModel.getValueAt(selectedRow, 6).toString().equals("Male")) {
                maleRadioButton.setSelected(true);
            } else {
                femaleRadioButton.setSelected(true);
            }

            String[] roles = {"Admin", "Producer", "Manager", "Courier"};
            if (employeesTableModel.getValueAt(selectedRow, 7).toString().equals(roles[0])) {
                roleSelector.setSelectedIndex(1);
            } else if (employeesTableModel.getValueAt(selectedRow, 7).toString().equals(roles[1])) {
                roleSelector.setSelectedIndex(2);
            } else if (employeesTableModel.getValueAt(selectedRow, 7).toString().equals(roles[2])) {
                roleSelector.setSelectedIndex(3);
            } else if (employeesTableModel.getValueAt(selectedRow, 7).toString().equals(roles[3])) {
                roleSelector.setSelectedIndex(4);
            }

            modifyButton.setEnabled(true);
            removeButton.setEnabled(true);
            addButton.setEnabled(false);
        } else {
            clearFields();
            modifyButton.setEnabled(false);
            removeButton.setEnabled(false);
            addButton.setEnabled(true);
        }
    }//GEN-LAST:event_employeesTableMouseClicked

    //Checking for invalid values
    private boolean isValid(String firstName, String lastName, String address, String newContactNo, String gender, String postCode, String role) {

        //Check for emptiness and for null values on each Strings
        if ((firstName.isEmpty() || firstName == null) && (lastName.isEmpty() || lastName == null)
                && (address.isEmpty() || address == null) && (newContactNo.isEmpty() || newContactNo == null)
                && (gender.isEmpty() || gender == null) && (postCode.isEmpty() || postCode == null) && (role.isEmpty() || role == null)) {

            //Show error message in errorLabel
            errorLabel.setText("One of the fields are empty...");
            errorLabel.setForeground(Color.red);

            return false;
        }
        return true;
    }

    //Clear all fields
    private void clearFields() {
        firstNameField.setText("");
        lastNameField.setText("");
        addressField.setText("");
        postCodeField.setText("");
        contactNoField.setText("");
        genderBtnGroup.clearSelection();
        roleSelector.setSelectedIndex(0);
    }

    //Populate table with employee data
    private void populateTableData() {

        //Initialise Person data access object
        employeeDao = new EmployeeDAO();

        //Get TableModel
        DefaultTableModel employeesTableModel = (DefaultTableModel) employeesTable.getModel();

        //Get list of employees        
        for (Person employeeData : employeeDao.getPersons()) {

            Employee theEmployeeData = (Employee) employeeData;
            //Get employee data
            int employeeId = theEmployeeData.getId();
            String firstName = theEmployeeData.getFirstName(), lastName = theEmployeeData.getLastName(),
                    address = theEmployeeData.getFirstLineAddress(), postCode = theEmployeeData.getPostcode(),
                    contactNo = theEmployeeData.getContactNumber(), gender = theEmployeeData.getGender(), role = theEmployeeData.getJobRole();

            //Add into array of objects
            Object[] employeesTableData = {employeeId, firstName, lastName, address, postCode, contactNo, gender, role};

            //Add employeesTableData to the table.
            employeesTableModel.addRow(employeesTableData);
        }

    }

    //Repopulate data
    private void updateTable() {
        //Get TableModel
        DefaultTableModel employeesTableModel = (DefaultTableModel) employeesTable.getModel();

        //Remove all rows
        for (int row = employeesTableModel.getRowCount() - 1; row >= 0; row--) {
            employeesTableModel.removeRow(row);
        }

        //Populate again
        populateTableData();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addressField;
    private javax.swing.JFormattedTextField contactNoField;
    private javax.swing.JTable employeesTable;
    private javax.swing.JPanel employeesTablePanel;
    private javax.swing.JScrollPane employeesTableScrollPane;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JPanel formPanel;
    private javax.swing.ButtonGroup genderBtnGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JButton modifyButton;
    private javax.swing.JFormattedTextField postCodeField;
    private javax.swing.JButton removeButton;
    private javax.swing.JComboBox<String> roleSelector;
    // End of variables declaration//GEN-END:variables
}
